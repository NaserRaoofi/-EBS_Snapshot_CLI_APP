name: Security & Quality Scan

on:
  push:
    branches: [main]
  pull_request:

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage

      - name: Install SonarScanner
        run: npm install -g sonarqube-scanner

      - name: Run tests with coverage
        run: |
          coverage run -m pytest
          coverage xml

      - name: Run SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=ebs_snapshot_cli_app \
            -Dsonar.organization=naserraoofi \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.python.coverage.reportPaths=coverage.xml \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  bandit:
    name: Bandit Security Scan
    needs: sonarcloud
    if: ${{ success() }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit
        run: bandit -r . -x tests,__pycache__ -f txt -c .bandit || true

  gitleaks:
    name: Gitleaks Secret Scan
    needs: bandit
    if: ${{ success() }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2.3.6
        with:
          args: detect --source=. --no-git --report-format sarif --report-path gitleaks.sarif

      - name: Upload Gitleaks Report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks.sarif

  # snyk:
  #   name: Snyk Dependency Scan
  #   needs: sonarcloud
  #   if: ${{ success() }}
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #
  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/python-3@v1
  #       with:
  #         args: --file=requirements.txt
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
