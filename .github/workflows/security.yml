# The build and deploy steps are now handled in build.yml and deploy.yml workflows.

name: Security & Quality Scan

on:
  push:
    branches: [main]
  pull_request:

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage

      - name: Install SonarScanner
        run: npm install -g sonarqube-scanner

      - name: Run tests with coverage
        run: |
          coverage run -m pytest
          coverage xml

      - name: Run SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=ebs_snapshot_cli_app \
            -Dsonar.organization=naserraoofi \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.python.coverage.reportPaths=coverage.xml \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  bandit:
    name: Bandit Security Scan
    needs: sonarcloud
    if: ${{ success() }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit
        run: bandit -r . -x tests,__pycache__ -f txt -c .bandit || true

  # gitleaks:
  #   name: Gitleaks Secret Scan
  #   needs: bandit
  #   if: ${{ success() }}
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #
  #     - name: Run Gitleaks
  #       run: |
  #         curl -sSL https://github.com/gitleaks/gitleaks/releases/download/v8.18.2/gitleaks_8.18.2_linux_x64.tar.gz | tar -xz
  #         ./gitleaks detect --source=. --no-git --report-format sarif --report-path gitleaks.sarif
  #
  #     - name: Upload Gitleaks Report
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: gitleaks-report
  #         path: gitleaks.sarif

  publish:
    name: Publish Docker Image to ECR
    needs: [sonarcloud, bandit]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build Docker image
        run: |
          docker build -t ec2-backup-tool .
      - name: Tag Docker image
        run: |
          IMAGE_URI=235494806851.dkr.ecr.us-east-1.amazonaws.com/ec2-backup-tool:latest
          docker tag ec2-backup-tool:latest $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
      - name: Push Docker image to ECR
        run: |
          docker push $IMAGE_URI

  # snyk:
  #   name: Snyk Dependency Scan
  #   needs: sonarcloud
  #   if: ${{ success() }}
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #
  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/python-3@v1
  #       with:
  #         args: --file=requirements.txt
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
